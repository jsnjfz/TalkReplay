name: Build and Push Docker on Release

on:
  release:
    types: [published]

permissions:
  contents: read

env:
  DEFAULT_DOCKERHUB_USER: talkreplay

jobs:
  validate-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract.outputs.tag }}
      version: ${{ steps.extract.outputs.version }}
      is_prerelease: ${{ steps.extract.outputs.is_prerelease }}
      should_build: ${{ steps.extract.outputs.should_build }}
    steps:
      - name: Extract release information
        id: extract
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          IS_PRERELEASE="${{ github.event.release.prerelease }}"
          IS_DRAFT="${{ github.event.release.draft }}"
          VERSION="${TAG_NAME#v}"
          SHOULD_BUILD="true"
          if [ "$IS_PRERELEASE" = "true" ] || [ "$IS_DRAFT" = "true" ]; then
            SHOULD_BUILD="false"
          fi
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT
          echo "should_build=$SHOULD_BUILD" >> $GITHUB_OUTPUT

  build-docker:
    name: Build & Push Docker
    needs: validate-release
    if: needs.validate-release.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME || 'talk-replay' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: env.DOCKERHUB_USER && env.DOCKERHUB_TOKEN
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USER && format('{0}/{1}', env.DOCKERHUB_USER, env.IMAGE_NAME) || '' }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ needs.validate-release.outputs.tag }},enable=true
          labels: |
            org.opencontainers.image.title=TalkReplay
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ needs.validate-release.outputs.tag }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
